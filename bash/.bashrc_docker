#!/usr/bin/env bash

#############################################
## Docker Related unctions
#############################################

cleanContainers() {
    containers=$(docker ps -q)
    if [ "$containers" != "" ]; then
        echo "killing all containers"
        docker kill $(docker ps -q)
    else
       echo "there is no running container"
    fi
}

cleanAllContainers() {
    containers=$(docker ps -aq)
    if [ "$containers" != "" ]; then
        echo "removing all containers"
        docker rm -f $(docker ps -a -q)
    else
       echo "there is no container"
    fi
}

cleanImages() {
    images=$(docker images -q -f dangling=true)
    if [ "$images" != "" ]; then
        echo "removing all dangling images"
        docker rmi $(docker images -q -f dangling=true)
    else
        echo "there is no dangling image to be removed"
    fi
}

cleanAllImages() {
    images=$(docker images -q)
    if [ "$images" != "" ]; then
        echo "removing all images"
        docker rmi $(docker images -q)
    else
        echo "there is no image to be removed"
    fi
}

cleanVolumes() {
    volumes=$(docker volume ls -q -f dangling=true)
    if [ "$volumes" != "" ]; then
        echo "removing all dangling volumes"
        docker volume rm $(docker volume ls -q -f dangling=true)
    else
        echo "there is no dangling volume to be removed"
    fi
}

cleanAllVolumes() {
    volumes=$(docker volume ls -q)
    if [ "$volumes" != "" ]; then
        echo "removing all volumes"
        docker volume rm $(docker volume ls -q)
    else
        echo "there is no volume to be remove"
    fi
}

alias docker-clean-all='cleanAllContainers cleanAllImages cleanAllVolumes'

alias docker-clean=' \
    docker ps --no-trunc -aqf "status=exited" | xargs docker rm ; \
    docker images --no-trunc -aqf "dangling=true" | xargs docker rmi ; \
    docker volume ls -qf "dangling=true" | xargs docker volume rm'
